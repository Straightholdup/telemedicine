version: '3.9'

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
  web:
    build:
      context: ..
      dockerfile: python/Dockerfile.prod
    command: gunicorn telemedecine.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "80:8000"
    env_file:
      - ../.env.prod
    expose:
      - 8000
    networks:
      - app-network
    depends_on:
      - db
  nginx:
    build: nginx
    volumes:
      - web-root:/var/www/html
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - "1337:80"
    depends_on:
      - web
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email biba4756@gmail.com --agree-tos --no-eff-email --staging -d server.online-medicine.kz  -d www.server.online-medicine.kz

volumes:
  certbot-etc:
  certbot-var:
  static_volume:
  media_volume:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /root/diploma-back/
      o: bind

networks:
  app-network:
    driver: bridge